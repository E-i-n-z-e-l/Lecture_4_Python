# Функция map

# Функция map() применяет указанную функцию к каждому элементу
# итерируемого объекта и возвращает итератор с новыми объектами.


# Задача: C клавиатуры вводится некий набор чисел, в качестве разделителя
# используется пробел. Этот набор чисел будет считан в качестве строки. Как
# превратить list строк в list чисел?

# Маленькое отступление, функция строка.split() - убирает все пробелы и создаем
# список из значений строки, пример:

# data = '1 2 3 5 8 15 23 38'.split()
# print(data) # ['1', '2', '3', '5', '8', '15', '23', '38']


# Теперь вернемся к задаче. С помощью функции map():

# data = list(map(int,input().split()))


# Результат работы map() — это итератор. По итератору можно пробежаться только
# один раз. Чтобы работать несколько раз с одними данными, нужно сохранить
# данные (например, в виде списка).

# Функция filter
# Функция filter() применяет указанную функцию к каждому элементу
# итерируемого объекта и возвращает итератор с теми объектами, для которых
# функция вернула True.




# Функция zip
# Функция zip() применяется к набору итерируемых объектов и
# возвращает итератор с кортежами из элементов входных данных

# Функция enumerate
# Функция enumerate() применяется к итерируемому объекту и
# возвращает новый итератор с кортежами из индекса и элементов входных
# данных.
